@model BloodBankManagementSystem.RequestBlood

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="~/CustomsStyleSheet/LoginStyleSheet.css" rel="stylesheet" />
</head>

<h2 style="color: brown; text-shadow: -1px 0 darkgrey, 0 1px darkgrey, 1px 0 darkgrey, 0 -1px darkgrey;"><center> Blood Request Form</center></h2>



@using (Html.BeginForm("Create", "RequestBloods", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <br />
    <br />
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <img src="~/Images/_107317099_blooddonor976.jpg" class=" img-rounded img-responsive" />
                <br />
                <a href="@Url.Action("Index","RequestBloods")" class="btn btn-danger"><span class="glyphicon glyphicon-eye-open"></span> View List</a>

            </div>
            
  
            
                <div class="col-md-8">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })<br />
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BloodListId, "Blood Group", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("BloodListId", null, "Select Blood Group", htmlAttributes: new { @class = "form-control" })<br />

                            @Html.ValidationMessageFor(model => model.BloodListId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BloodId, "Blood Details", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("BloodId", null, "Select Respective One", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BloodId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                            @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender" })
                                Male
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender" })
                                Female
                            </label>
                            <label class="radio-inline">

                                @Html.RadioButtonFor(model => model.Gender, "Others", new { @name = "gender" })
                                Others
                            </label>

                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" ,@type="number"} })
                            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <center> <input type="submit" value="Submit" class="btn btn-danger" /> </center>

                        </div>
                    </div>

                    @*<button class="btn btn-lg btn-danger">@Html.ActionLink("Back to List", "Index")</button>*@


                </div>
           

        </div>

    </div>
}

   

    
